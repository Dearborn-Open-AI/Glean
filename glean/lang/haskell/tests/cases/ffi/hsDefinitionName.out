[
  "@generated",
  { "key": "Control.Exception.Base.bracket" },
  { "key": "Control.Exception.Base.finally" },
  { "key": "Data.ByteString.Internal.ByteString" },
  { "key": "Data.ByteString.Unsafe.unsafePackMallocCStringLen" },
  { "key": "Data.ByteString.Unsafe.unsafeUseAsCStringLen" },
  { "key": "Data.ByteString.packCStringLen" },
  { "key": "Data.Foldable.foldr" },
  { "key": "Data.Functor.<$>" },
  { "key": "Data.Text.Encoding.Error.lenientDecode" },
  { "key": "Data.Text.Encoding.decodeUtf8With" },
  { "key": "Data.Text.Encoding.encodeUtf8" },
  { "key": "Data.Text.Internal.Text" },
  { "key": "Data.Vector.Storable.Vector" },
  { "key": "Data.Vector.Storable.unsafeFromForeignPtr0" },
  { "key": "Foreign.C.String.CString" },
  { "key": "Foreign.C.String.peekCString" },
  { "key": "Foreign.C.Types.CChar" },
  { "key": "Foreign.C.Types.CSize" },
  { "key": "Foreign.ForeignPtr.Imp.newForeignPtr" },
  { "key": "Foreign.ForeignPtr.Imp.withForeignPtr" },
  { "key": "Foreign.Marshal.Alloc.alloca" },
  { "key": "Foreign.Marshal.Alloc.allocaBytes" },
  { "key": "Foreign.Marshal.Alloc.finalizerFree" },
  { "key": "Foreign.Marshal.Alloc.free" },
  { "key": "Foreign.Marshal.Utils.with" },
  { "key": "Foreign.Marshal.Utils.withMany" },
  { "key": "Foreign.Storable.Storable" },
  { "key": "Foreign.Storable.peek" },
  { "key": "Foreign.Storable.sizeOf" },
  { "key": "GHC.Base.$" },
  { "key": "GHC.Base.." },
  { "key": "GHC.Base.<*>" },
  { "key": "GHC.Base.>>=" },
  { "key": "GHC.Base.String" },
  { "key": "GHC.Base.assert" },
  { "key": "GHC.Base.fmap" },
  { "key": "GHC.Base.return" },
  { "key": "GHC.Base.when" },
  { "key": "GHC.Classes./=" },
  { "key": "GHC.Classes.<=" },
  { "key": "GHC.Err.undefined" },
  { "key": "GHC.Exception.Type.Exception" },
  { "key": "GHC.ForeignPtr.ForeignPtr" },
  { "key": "GHC.ForeignPtr.finalizeForeignPtr" },
  { "key": "GHC.IO.Exception.assertError" },
  { "key": "GHC.IO.Unsafe.unsafePerformIO" },
  { "key": "GHC.IO.mask_" },
  { "key": "GHC.IO.throwIO" },
  { "key": "GHC.List.reverse" },
  { "key": "GHC.Num.*" },
  { "key": "GHC.Ptr.FunPtr" },
  { "key": "GHC.Ptr.Ptr" },
  { "key": "GHC.Ptr.castPtr" },
  { "key": "GHC.Ptr.nullPtr" },
  { "key": "GHC.Ptr.plusPtr" },
  { "key": "GHC.Real.fromIntegral" },
  { "key": "GHC.Show.Show" },
  { "key": "GHC.Show.show" },
  { "key": "GHC.Tuple.()" },
  { "key": "GHC.Tuple.(,)" },
  { "key": "GHC.Types.:" },
  { "key": "GHC.Types.IO" },
  { "key": "GHC.Types.Int" },
  { "key": "GHC.Types.[]" },
  { "key": "GHC.Word.Word64" },
  { "key": "Glean.FFI.Constructor" },
  { "key": "Glean.FFI.Destroy" },
  { "key": "Glean.FFI.FFIResultBuf" },
  { "key": "Glean.FFI.Object" },
  { "key": "Glean.FFI.Static" },
  { "key": "Glean.FFI.construct" },
  { "key": "Glean.FFI.constructor" },
  { "key": "Glean.FFI.copyByteString" },
  { "key": "Glean.FFI.create" },
  { "key": "Glean.FFI.destroy" },
  { "key": "Glean.FFI.destroyStatic" },
  { "key": "Glean.FFI.ffiBuf" },
  { "key": "Glean.FFI.ffiBuf2" },
  { "key": "Glean.FFI.fromUTF8" },
  { "key": "Glean.FFI.release" },
  { "key": "Glean.FFI.unsafeMallocedByteString" },
  { "key": "Glean.FFI.unsafeMallocedUTF8" },
  { "key": "Glean.FFI.unsafeMallocedVector" },
  { "key": "Glean.FFI.unsafeWithBytes" },
  { "key": "Glean.FFI.unwrap" },
  { "key": "Glean.FFI.using" },
  { "key": "Glean.FFI.usingMalloced" },
  { "key": "Glean.FFI.usingManyMalloced" },
  { "key": "Glean.FFI.wORD64_SIZE" },
  { "key": "Glean.FFI.with" },
  { "key": "Glean.FFI.withFFIResultBuf" },
  { "key": "Glean.FFI.withMany" },
  { "key": "Glean.FFI.withStatic" },
  { "key": "Glean.FFI.withUTF8Text" },
  { "key": "Glean.FFI.wrap" },
  { "key": "Util.FFI.:>" },
  { "key": "Util.FFI.FFIError" },
  { "key": "Util.FFI.FFIFun" },
  { "key": "Util.FFI.List" },
  { "key": "Util.FFI.Nil" },
  { "key": "Util.FFI.Res" },
  { "key": "Util.FFI.Tup" },
  { "key": "Util.FFI.Tuple" },
  { "key": "Util.FFI.call" },
  { "key": "Util.FFI.ffiErrorMessage" },
  { "key": "Util.FFI.hs_ffi_free_error" },
  { "key": "Util.FFI.invoke" },
  { "key": "Util.FFI.invoke'" },
  { "key": "Util.FFI.tuple" }
]
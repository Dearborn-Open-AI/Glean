# Copyright (c) Facebook, Inc. and its affiliates.

schema deadcode.1 {
import code.15
import src.1

  predicate GraphEdge:
  {
    from: code.Entity,
    to: code.Entity,
  }

  predicate GraphNode:
  {
    entity: code.Entity,
    file: src.File,
    span: src.ByteSpan,
    out_degree: nat,
    in_degree: nat,
  }
}

schema deadcode.2 {
import code.15
import src.1

  type GraphType = enum { Raw | Condensed }

# Represents the information stored in a single node in raw graph
# equivalent to a symbol details class
  predicate GraphEntity:
  {
    entity: code.Entity,
    file: src.File,
    span: src.ByteSpan,
  }

  predicate GraphNode:
  {
    entities: [GraphEntity],
    type: GraphType,
    out_degree: nat,
    in_degree: nat,
  }

  predicate GraphEdge:
  {
    from: GraphNode,
    to: GraphNode,
  }
}
